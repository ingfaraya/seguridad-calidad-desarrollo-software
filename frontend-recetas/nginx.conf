worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    sendfile on;
    keepalive_timeout 65;

    # Ocultar la versión de NGINX
    server_tokens off;

    server {
        listen 80;
        server_name localhost;

        # Ruta a los archivos del frontend construido por Angular
        root /usr/share/nginx/html;
        index index.html;

        # Añadir la cabecera CSP para mejorar la seguridad
        add_header Content-Security-Policy "
            default-src 'self'; 
            script-src 'self' 'unsafe-inline' https://fonts.googleapis.com; 
            style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; 
            img-src 'self' data:; 
            font-src 'self' https://fonts.gstatic.com; 
            object-src 'none'; 
            form-action 'self'; 
            frame-ancestors 'none'; 
            base-uri 'self'; 
            connect-src 'self' http://localhost:8080 http://localhost:8081 http://localhost:8082; 
            media-src 'self';
        " always;


        # Añadir encabezado X-Content-Type-Options
        add_header X-Content-Type-Options "nosniff" always;

        # Bloquear acceso a archivos sensibles
        location ~ /\.(?!well-known).* {
            deny all;
        }

        # Manejo de errores
        error_page 404 /404.html;

        location / {
            try_files $uri $uri/ /index.html =404;
        }

        # Proxy para las peticiones al backend en Node.js
        location /api/ {
            proxy_pass http://127.0.0.1:3000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Bloquear intentos de acceso a la metadata del Cloud (AWS, GCP, Azure)
        location ~* /meta-data/ {
            deny all;
        }
    }
}
